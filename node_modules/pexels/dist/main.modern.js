process;const o={photo:"https://api.pexels.com/v1/",video:"https://api.pexels.com/videos/",collections:"https://api.pexels.com/v1/collections/"};function t(t,e){const n={method:"GET",headers:{Accept:"application/json","Content-Type":"application/json","User-Agent":"Pexels/JavaScript",Authorization:t}},r=o[e];return(o,t)=>fetch(`${r}${o}?${function(o){return Object.keys(o).map(t=>`${t}=${o[t]}`).join("&")}(t||{})}`,n).then(o=>o.json())}function e(o){const e=t(o,"collections");return{all:o=>e("",o),media:({id:o,...t})=>e(""+o,t)}}function n(o){return!(!o||!o.photos)}var r={__proto__:null,isPhotos:n,isVideos:function(o){return!(!o||!o.videos)},isError:function(o){return!!o.error}};function i(o){const e=t(o,"photo");return{search:o=>e("/search",o),curated:(o={})=>e("/curated",o),show:({id:o})=>e("/photos/"+o),async random(){const o=Math.floor(1e3*Math.random()),t=await this.curated({page:o,per_page:1});return n(t)?t.photos[0]:t}}}function s(o){const e=t(o,"video");return{search:o=>e("/search",o),popular:(o={})=>e("/popular",o),show:({id:o})=>e("/videos/"+o)}}function c(o){if(!o||"string"!=typeof o)throw new TypeError("An ApiKey must be provided when initiating the Pexel's client.");return{typeCheckers:r,photos:i(o),videos:s(o),collections:e(o)}}require("isomorphic-fetch");export{c as createClient};
//# sourceMappingURL=main.modern.js.map
